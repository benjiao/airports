---

- name: Ensure PostGIS dependencies are installed
  become: true
  apt: name={{item}} state=installed
  with_items:
    - libgdal-dev
    - libpq-dev
    - python-psycopg2

- name: Ensure apt key for PostgreSQL is downloaded
  become: true
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present

- name: Ensure PostgreSQL repo is added
  become: true
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main"
    state: present
    update_cache: yes

- name: Ensure PostgreSQL is installed
  become: true
  apt: 
    name: postgresql-9.6
    state: installed

- name: Ensure PostGIS repo is added
  become: true
  apt_repository:
    repo: "ppa:ubuntugis/ubuntugis-unstable"
    state: present
    update_cache: yes

- name: Ensure PostGIS is installed
  become: true
  apt: 
    name: postgresql-9.6-postgis-2.4
    state: installed

- name: Ensure PostGIS user for app exists
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ postgres.username }}"
    password: "{{ postgres.password }}"
    role_attr_flags: SUPERUSER

- name: Ensure database exists
  become: yes
  become_user: postgres
  postgresql_db:
    name: '{{ postgres.dbname }}'
    owner: '{{ postgres.username }}'

- name: Ensure PostGIS is installed in app database
  become: yes
  become_user: postgres
  postgresql_ext:
    name: postgis
    db: '{{ postgres.dbname }}'

- name: Ensure postgis_topology is installed in app database
  become: yes
  become_user: postgres
  postgresql_ext:
    name: postgis_topology
    db: '{{ postgres.dbname }}'

- name: Ensure test database exists
  become: yes
  become_user: postgres
  postgresql_db:
    name: '{{ postgres.dbname }}_test'
    owner: '{{ postgres.username }}'

- name: Ensure PostGIS is installed in app test database
  become: yes
  become_user: postgres
  postgresql_ext:
    name: postgis
    db: '{{ postgres.dbname }}_test'

- name: Ensure postgis_topology is installed in test database
  become: yes
  become_user: postgres
  postgresql_ext:
    name: postgis_topology
    db: '{{ postgres.dbname }}_test'

# Allow network access
- name: Update postgresql.conf
  become: true
  lineinfile:
    path: /etc/postgresql/9.6/main/postgresql.conf
    regexp: '^listen_addresses(.*)'
    insertafter: '^#listen_addresses(.*)'
    line: "listen_addresses = '*'"
  notify:
    - restart postgresql

- name: Update pg_hba.conf
  become: true
  lineinfile:
    path: /etc/postgresql/9.6/main/pg_hba.conf
    regexp: '^host all all 0.0.0.0/0 md5'
    line: "host all all 0.0.0.0/0 md5"
  notify:
    - restart postgresql
